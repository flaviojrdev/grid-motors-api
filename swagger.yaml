openapi: 3.0.0
info:
  title: Grid Motors API
  description: This REST API deals with user auth and CRUD operations of user, cars and reservations.
  version: 1.0.0
servers:
  - url: http://localhost:3000/api/v1
    description: Base API URL
paths:
  /user:
    post:
      summary: User registration
      tags:
        - User
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: User created
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/User'
        '400':
          description: Invalid request body
        '409':
          description: User already exists
        '401':
          description: Unauthorized
    get:
      summary: List all users
      tags:
        - User
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
    put:
      summary: Update a user
      tags:
        - User
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: The ID of the user to update
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: User updated
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/User'
        '400':
          description: Invalid request body
        '401':
          description: Unauthorized
        '404':
          description: User not found
    delete:
      summary: Delete a user
      tags:
        - User
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: The ID of the user to delete
          required: true
          schema:
            type: string
      responses:
        '204':
          description: User deleted
        '401':
          description: Unauthorized
        '404':
          description: User not found
  /car:
    post:
      summary: Car registration
      tags:
        - Car
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Car'
      responses:
        '201':
          description: Car created
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/Car'
        '400':
          description: Invalid request body                 
    get:
      summary: List all cars
      tags:
        - Car
      responses:
        '200':
          description: List of cars
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Car'
    put:
      summary: Update a car
      tags:
        - Car
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: The ID of the car to update
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Car'
      responses:
        '200':
          description: Car updated
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/Car'
        '400':
          description: Invalid request body
        '401':
          description: Unauthorized
        '404':
          description: Car not found
    delete:
      summary: Delete a car
      tags:
        - Car
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: The ID of the car to delete
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Car deleted
        '401':
          description: Unauthorized
        '404':
          description: Car not found
  /reserve:
    post:
      summary: Make a car reservation
      tags:
        - Reserve
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Reserve'
      responses:
        '201':
          description: Reservation created
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/Reserve'
        '400':
          description: Invalid request body
        '401':
          description: Unauthorized
    get:
      summary: Get all car reservations
      tags:
        - Reserve
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of reservations
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Reserve'
        '401':
          description: Unauthorized
    put:
      summary: Update a car reservation
      tags:
        - Reserve
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the reservation to update
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Reserve'
      responses:
        '200':
          description: Reservation updated
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/Reserve'
        '400':
          description: Invalid request body
        '401':
          description: Unauthorized
        '404':
          description: Reservation not found
    delete:
      summary: Delete a car reservation
      tags:
        - Reserve
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the reservation to delete
          schema:
            type: integer
      responses:
        '204':
          description: Reservation deleted
        '401':
          description: Unauthorized
        '404':
          description: Reservation not found
components:
  schemas:
    User:
      type: object
      required:
        - name
        - cpf
        - birth
        - email
        - password
        - cep
        - qualified
      properties:
        name:
          type: string
          description: User name
          example: Jo√£ozinho Ciclano
        cpf:
          type: string
          description: User CPF
          example: 131.147.860-49
        birth:
          type: string
          description: User birth date
          example: '03/03/2000'
        email:
          type: string
          description: User email
          example: joazinho@email.com
        password:
          type: string
          description: User password
          example: '123456'
        cep:
          type: string
          description: User CEP
          example: 01001000
        qualified:
          type: boolean
          description: User driver license qualification
          example: sim
    Accessory:
      type: object
      required:
        - description
      properties:
        description:
          type: string
          description: The description of the accessory
          example: GPS navigation
    Car:
      type: object
      required:
        - model
        - color
        - year
        - values_per_day
        - accessories
        - number_of_passengers
      properties:
        model:
          type: string
        color:
          type: string
        year:
          type: integer
          minimum: 1950
          maximum: 2023
        values_per_day:
          type: number
        accessories:
          type: array
          items:
            $ref: '#/components/schemas/Accessory'
          minItems: 1
        number_of_passengers:
          type: integer
    Reserve:
      type: object
      required:
        - start_date
        - end_date
        - final_value
        - id_car
      properties:
        start_date:
          type: string
        end_date:
          type: string
        final_value:
          type: number
        id_car:
          type: object
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
